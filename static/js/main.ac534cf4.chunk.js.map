{"version":3,"sources":["config.js","TransferMapComponent/TransferMapComponent.js","TransferTableComponent/m-table-filter-row.js","TransferTableComponent/m-table-body.js","TransferTableComponent/TransferTableComponent.js","App.js","serviceWorker.js","index.js"],"names":["tableOptions","csvUrl","mapOptions","columns","transactionDate","title","field","hidden","searchable","sorting","grouping","filtering","type","defaultFilter","lookup","cellStyle","width","height","color","fontFamily","fontSize","letterSpacing","paidBy","paidTo","amount","fromCountry","country","purpose","bankSender","confidence","confirmed","textAlign","proof","internal","bank","electronic","customs","table","search","paging","pageSize","hideFilterIcons","showTitle","pageSizeOptions","paginationType","padding","searchFieldAlignment","searchFieldStyle","boxShadow","border","backgroundColor","headerStyle","borderWidth","borderTopWidth","borderBottomWidth","borderColor","borderStyle","fontWeight","lineHeight","rowStyle","Set","require","TransferMapComponent","config","countries","pairs","capitals","dataScaler","state","ready","conf","data","visibleCountries","visiblePairs","focusCountry","extractCountries","forEach","row","add","from_country","to_country","nestPairs","nest","key","d","rollup","value","count","length","total","sum","entries","showAllHandler","setState","countryClickHandler","has","props","handleCountryClick","json","c","then","map","totals","values","t","push","console","log","scaleLinear","domain","extent","range","name","all","this","projectionConfig","scale","xOffset","yOffset","geography","geographies","geo","properties","countryFill","passive_color","focus_color","active_color","rsmKey","onClick","stroke","fill","toCountry","from","get","latlng","slice","reverse","to","preserveMarkerAspect","strokeWidth","strokeLinecap","coordinates","id","x","y","filterUnits","dy","in","result","stdDeviation","transform","filter","mask","fill-opacity","stroke-miterlimit","stroke-width","clip-path","textAnchor","style","font_family","font_size","font_weight","letter_spacing","Component","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","MTableFilterRow","getLocalizationData","defaultProps","localization","getLocalizedFilterPlaceHolder","columnDef","filterPlaceholder","filterPlaceHolder","renderLookupFilter","FormControl","InputLabel","htmlFor","marginTop","Select","multiple","tableData","filterValue","onChange","event","onFilterChanged","target","input","Input","renderValue","selecteds","selected","join","Object","keys","MenuItem","Checkbox","checked","indexOf","toString","ListItemText","primary","renderFilterComponent","React","filterComponent","renderBooleanFilter","indeterminate","undefined","val","renderDefaultFilter","FilterIcon","icons","Filter","TextField","float","placeholder","inputProps","InputProps","hideFilterIcon","startAdornment","InputAdornment","position","Tooltip","filterTooltip","renderDateTypeFilter","pickerProps","date","clearable","dateInputElement","DatePicker","DateTimePicker","TimePicker","utils","DateFnsUtils","locale","dateTimePickerLocalization","customFilterAndSearch","includes","groupOrder","sort","a","b","columnOrder","TableCell","filterCellStyle","getComponentForColumn","selection","splice","hasActions","actionsColumnIndex","endPos","hasDetailPanel","isTreeData","resetFilters","textDecoration","backgroundRepeat","cursor","overflow","outline","TableRow","MTableBody","emptyRowCount","renderData","rowHeight","options","showEmptyDataSourceMessage","addColumn","actions","emptyRowsWhenPaging","paddingTop","paddingBottom","colSpan","emptyDataSourceMessage","Array","r","index","editing","components","EditRow","editRow","mode","detailPanel","onEditingCanceled","onEditingApproved","getFieldValue","Row","level","onRowSelected","path","currentPage","onToggleDetailPanel","onRowClick","onTreeExpandChanged","hasAnyEditingRow","treeDataMaxLevel","groups","groupData","GroupRow","onGroupExpandChanged","col","col1","col2","TableBody","FilterRow","filterRow","showAddRow","addRowPosition","initialFormData","renderGroupedRows","renderUngroupedRows","renderEmpty","objColumns","TransferTableComponent","setData","newData","getLookupData","initLookup","loadImage","obj","src","alt","cols","reduce","filterCountry","prevProps","Body","toolbar","searchPlaceholder","App","csv","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ac534cf4.chunk.js","sourcesContent":["\nconst tableOptions = {\n\n    csvUrl: 'https://firebasestorage.googleapis.com/v0/b/newagent-b0720.appspot.com/o/transfer-table%2Fmockup.csv?alt=media&token=82d1e6d6-e634-492d-a7a7-32223735c25f',\n\n    mapOptions: {\n        \"active_color\": \"#dbabac\",\n        \"passive_color\": \"#DDD\",\n        \"focus_color\": \"#bd3d3f\",\n        \"capitals\": \"https://gist.githubusercontent.com/erdem/8c7d26765831d0f9a8c62f02782ae00d/raw/248037cd701af0a4957cce340dabb0fd04e38f4c/countries.json\"\n    },\n\n    columns: {\n        transactionDate: {\n            title: \"Transaction date\",\n            field: \"transactionDate\",\n            hidden: false,\n            searchable: true,\n            sorting: true,\n            grouping: true,\n            filtering: true,\n            type: 'date',\n            defaultFilter: '',\n            lookup: '',\n            cellStyle: {\n                width: '114px',\n                height: '19px',\n                color: '#515151',\n                fontFamily: 'Open Sans, sans-serif',\n                fontSize: '14px',\n                letterSpacing: '-0.3px',\n              },\n     \n        },\n        paidBy: {\n            title: \"Paid by\",\n            field: \"paidBy\",\n            hidden: false,\n            searchable: true,\n            sorting: true,\n            grouping: true,\n            filtering: true,\n            defaultFilter: '',\n            lookup: '',\n            type: '',\n            cellStyle: {\n                width: '114px',\n                height: '19px',\n                color: '#515151',\n                fontFamily: 'Open Sans, sans-serif',\n                fontSize: '14px',\n                letterSpacing: '-0.3px',\n              },\n        },\n        paidTo: {\n            title: \"Paid to\",\n            field: \"paidTo\",\n            hidden: false,\n            searchable: true,\n            sorting: true,\n            grouping: true,\n            filtering: true,\n            defaultFilter: '',\n            lookup: '',\n            type: '',\n            cellStyle: {\n                width: '114px',\n                height: '19px',\n                color: '#515151',\n                fontFamily: 'Open Sans, sans-serif',\n                fontSize: '14px',\n                letterSpacing: '-0.3px',\n              },\n        },\n        amount: {\n            title: \"Amount\",\n            field: \"amount\",\n            hidden: false,\n            searchable: true,\n            sorting: true,\n            grouping: true,\n            filtering: true,\n            defaultFilter: '',\n            lookup: '',\n            type: 'numeric',\n            cellStyle: {\n                width: '114px',\n                height: '19px',\n                color: '#515151',\n                fontFamily: 'Open Sans, sans-serif',\n                fontSize: '14px',\n                letterSpacing: '-0.3px',\n              },\n        },\n        fromCountry: {\n            title: \"From Country\",\n            field: \"fromCountry\",\n            hidden: false,\n            searchable: true,\n            sorting: true,\n            grouping: true,\n            filtering: true,\n            defaultFilter: '',\n            lookup: '',\n            type: '',\n            cellStyle: {\n                width: '114px',\n                height: '19px',\n                color: '#515151',\n                fontFamily: 'Open Sans, sans-serif',\n                fontSize: '14px',\n                letterSpacing: '-0.3px',\n              },\n        },\n        country: {\n            title: \"Country\",\n            field: \"country\",\n            hidden: false,\n            searchable: true,\n            sorting: true,\n            grouping: true,\n            filtering: true,\n            defaultFilter: '',\n            lookup: '',\n            type: '',\n            cellStyle: {\n                width: '114px',\n                height: '19px',\n                color: '#515151',\n                fontFamily: 'Open Sans, sans-serif',\n                fontSize: '14px',\n                letterSpacing: '-0.3px',\n              },\n        },\n        purpose: {\n            title: \"Purpose\",\n            field: \"purpose\",\n            hidden: false,\n            searchable: true,\n            sorting: true,\n            grouping: true,\n            filtering: true,\n            defaultFilter: '',\n            lookup: '',\n            type: '',\n            cellStyle: {\n                width: '114px',\n                height: '19px',\n                color: '#515151',\n                fontFamily: 'Open Sans, sans-serif',\n                fontSize: '14px',\n                letterSpacing: '-0.3px',\n              },\n        },\n        type: {\n            title: \"Type\",\n            field: \"type\",\n            hidden: false,\n            searchable: true,\n            sorting: true,\n            grouping: true,\n            filtering: true,\n            defaultFilter: '',\n            lookup: '',\n            type: '',\n            cellStyle: {\n                width: '50px',\n                height: '19px',\n                color: '#515151',\n                fontFamily: 'Open Sans, sans-serif',\n                fontSize: '14px',\n                letterSpacing: '-0.3px',\n              },\n        },\n        bankSender: {\n            title: \"Bank sender\",\n            field: \"bankSender\",\n            hidden: false,\n            searchable: true,\n            sorting: true,\n            grouping: true,\n            filtering: true,\n            defaultFilter: '',\n            lookup: '',\n            type: '',\n            cellStyle: {\n                width: '114px',\n                height: '19px',\n                color: '#515151',\n                fontFamily: 'Open Sans, sans-serif',\n                fontSize: '14px',\n                letterSpacing: '-0.3px',\n              },\n        },\n        confidence: {\n            title: \"Confidence\",\n            field: \"confidence\",\n            hidden: false,\n            searchable: true,\n            sorting: true,\n            grouping: true,\n            filtering: false,\n            lookup: {confirmed: 'https://firebasestorage.googleapis.com/v0/b/newagent-b0720.appspot.com/o/transfer-table%2FConfirmed.svg?alt=media&token=60873b2f-26ed-4c14-b210-8f5467709e1c'},\n            defaultFilter: '',\n            type: 'image',\n            cellStyle: { textAlign: 'center',}\n        },\n        proof: {\n            title: \"Proof\",\n            field: \"proof\",\n            hidden: false,\n            searchable: true,\n            sorting: true,\n            grouping: true,\n            filtering: false,\n            lookup: {internal: 'https://firebasestorage.googleapis.com/v0/b/newagent-b0720.appspot.com/o/transfer-table%2FInternal.svg?alt=media&token=ea2ac9bf-5026-45ff-8074-0e5bd08b5e8a', \n                    bank: 'https://firebasestorage.googleapis.com/v0/b/newagent-b0720.appspot.com/o/transfer-table%2FBank.svg?alt=media&token=cf2d58c9-c18e-48e1-9033-8739f85a66eb', \n                    electronic: 'https://firebasestorage.googleapis.com/v0/b/newagent-b0720.appspot.com/o/transfer-table%2FElectronic.svg?alt=media&token=0a7b3d35-71a8-4f46-85a0-9bf681e7c2b0',\n                    customs: 'https://firebasestorage.googleapis.com/v0/b/newagent-b0720.appspot.com/o/transfer-table%2FCustoms.svg?alt=media&token=71ecfae4-1c9e-459d-82a3-e8da707dbb9d'},\n            defaultFilter: '',\n            type: 'image',\n            cellStyle: { textAlign: 'center' }\n        },\n    },\n    table: {\n        search: true,\n        sorting: true,\n        filtering: true,\n        grouping: false,\n        paging: true,\n        pageSize: 20,\n\n        hideFilterIcons: true,\n        showTitle: false,\n        pageSizeOptions: [],\n        paginationType: 'stepped',\n        padding: 'dense',\n        searchFieldAlignment: 'left',\n\n        searchFieldStyle: {\n            width: '100%',\n            height: '35px',\n            boxShadow: 'inset 1px 2px 4px rgba(0, 0, 0, 0.35)',\n            border: '1px solid #979797',\n            backgroundColor: '#ffffff'},\n\n        headerStyle: {\n            borderWidth: 0,\n            borderTopWidth: 2,\n            borderBottomWidth: 2,\n            borderColor: '#931e1d',\n            borderStyle: 'solid',\n            width: '80px',\n            height: '29px',\n            color: '#515151',\n            fontFamily: 'Open Sans, sans-serif',\n            fontSize: '14px',\n            fontWeight: '700',\n            letterSpacing: '-0.3px',\n            lineHeight: '14px',\n        },\n\n        rowStyle: {\n            height: '37px',\n        }\n    }\n}\n\n\n\n// myJSON = JSON.stringify(tableOptions,null, 4);\nexport default tableOptions\n\n// export default tableOptions\n\n\n//     console.log(myJSON)\n//     console.log(typeof(myJSON))\n\n\n// let objJSON = JSON.parse(myJSON);\n//     console.log(objJSON)\n//     console.log(typeof(objJSON))    \n\n// let newJSON = JSON.stringify(objJSON,null, 4);\n//     console.log(newJSON)\n//     console.log(typeof(newJSON))","import React, { Component } from 'react'\nimport {\n  ComposableMap,\n  ZoomableGroup,\n  Geographies,\n  Geography,\n  Line,\n  Marker\n} from 'react-simple-maps'\n\nimport {\n  csv,\n  json,\n  nest,\n  sum,\n  extent,\n  scaleLinear\n} from 'd3'\n\nimport config from '../config';\n\nconst { Set } = require('immutable');\n\nconst configURL = 'https://firebasestorage.googleapis.com/v0/b/newagent-b0720.appspot.com/o/transfer-map%2Fmap_config.json?alt=media&token=170acf67-7f33-4da3-ba43-e01b6620469a'\nconst geoUrl = 'https://firebasestorage.googleapis.com/v0/b/newagent-b0720.appspot.com/o/transfer-map%2Fcountries-110m.json?alt=media&token=94f12c4b-592b-46d9-8761-a20a94c09b20'\n\n\nclass TransferMapComponent extends Component {\n\n  config = {};\n  countries = Set([]);\n  pairs = [];\n  capitals = {};\n  dataScaler = null;\n\n  state = {\n    ready: false,\n    conf: {},\n    data: [],\n    visibleCountries: Set([]),\n    visiblePairs: [],\n    focusCountry: null\n  }\n\n  extractCountries = (table) => {\n    table.forEach(row => {\n      this.countries = this.countries.add(row.from_country)\n      this.countries = this.countries.add(row.to_country)\n    })\n  }\n\n  nestPairs = (data) => {\n    return nest()\n      .key(d => d.from_country)\n      .key(d => d.to_country)\n      .rollup(value => {\n        return {\n          count: value.length,\n          total: sum(value, d => d.amount)\n        }\n    })\n      .entries(data)\n  }\n\n  showAllHandler = () => this.setState({visibleCountries: this.countries});\n\n  countryClickHandler = (country) => {\n    if (this.countries.has(country)) {\n      this.setState({\n        focusCountry: country\n      })\n      this.props.handleCountryClick(country)\n    }\n  }\n\n  componentDidMount() {\n    json(config.mapOptions.capitals, c => c)\n      .then(capitals => {\n        const table = this.props.data.map(row => {\n          return {\n            from_country: row[config.columns.fromCountry.field],\n            to_country: row[config.columns.country.field],\n            amount: row[config.columns.amount.field]\n          }\n        })\n        this.extractCountries(table)\n        this.pairs = this.nestPairs(table);\n        const totals = []\n        this.pairs.forEach(d => d.values.forEach(t => {\n          totals.push(t.value.total)\n        }))\n        console.log(this.pairs)\n        this.dataScaler = scaleLinear()\n          .domain(extent(totals))\n          .range([0.5, 5])\n        this.capitals = nest()\n          .key(d => d.name)\n          .map(capitals)\n        console.log(this.capitals)\n        this.setState({\n          data: table,\n          ready: true,\n          visibleCountries: this.countries,\n          visiblePairs: this.pairs\n        })\n      })\n  }\n\n  render() {\n\n    let all = null;\n    if (this.state.ready) {\n      all = (\n        <div>\n          <ComposableMap projectionConfig={{\n            scale: 230,\n            xOffset: 1000,\n            yOffset: 50\n          }}\n          handleCountryClick={this.handleCountryClick}>\n            <Geographies geography={geoUrl}>\n              {({ geographies }) =>\n                geographies.map(geo => {\n                const c = this.state.visibleCountries.has(geo.properties.name);\n                const focusCountry = (this.state.focusCountry === geo.properties.name);\n                let countryFill = config.mapOptions.passive_color;\n                if (focusCountry) {\n                  countryFill = config.mapOptions.focus_color\n                } else if (c) {\n                  countryFill = config.mapOptions.active_color\n                };\n                return (\n                  <Geography\n                    key={geo.rsmKey}\n                    geography={geo}\n                    onClick={() => this.countryClickHandler(geo.properties.name)}\n                    stroke='#FFF'\n                    fill={countryFill}\n                  />\n                )\n              })}\n            </Geographies>\n           \n            {this.state.visiblePairs.map(fromCountry =>\n              fromCountry.values.map(toCountry => {\n                //console.log(this.capitals)\n                //console.log(this.capitals.get(fromCountry.key))\n                // console.log(toCountry)\n                return <Line\n                  //line={{ coordinates: { start: this.capitals.get(fromCountry.key)[0].latlng.slice().reverse(), end: this.capitals.get(toCountry.key)[0].latlng.slice().reverse() }, curveStyle: \"forceUp\" }}\n                  from={this.capitals.get(fromCountry.key)[0].latlng.slice().reverse()}\n                  to={this.capitals.get(toCountry.key)[0].latlng.slice().reverse()}\n                  preserveMarkerAspect={false}\n                  stroke=\"#931e1d\"\n                  strokeWidth={this.dataScaler(toCountry.value.total)}\n                  strokeLinecap=\"round\"\n                />\n            })\n            )}\n            {this.state.visiblePairs.map(fromCountry =>\n              fromCountry.values.map(toCountry => {\n                return <Marker\n                  coordinates={this.capitals.get(toCountry.key)[0].latlng.slice().reverse()}\n                >\n\n                  <defs>\n                    <mask id=\"k4zgb\" width=\"2\" height=\"2\" x=\"-1\" y=\"-1\">\n                      <path fill=\"#fff\" d=\"M2 1h104v39H2z\"/>\n                      <path d=\"M2 1h104v34H59l-5 5-5-5H2z\"/>\n                    </mask>\n                    <filter id=\"k4zga\" width=\"128\" height=\"64\" x=\"-10\" y=\"-11\" filterUnits=\"userSpaceOnUse\">\n                      <feOffset dy=\"1\" in=\"SourceGraphic\" result=\"FeOffset1023Out\"/>\n                      <feGaussianBlur in=\"FeOffset1023Out\" result=\"FeGaussianBlur1024Out\" stdDeviation=\"0.8 0.8\"/>\n                    </filter>\n                    <clipPath id=\"k4zgc\">\n                      <path fill=\"#fff\" d=\"M2 1h104v34H59l-5 5-5-5H2z\"/>\n                    </clipPath>\n                  </defs>\n                  <g\n                    transform=\"translate(-53, -45)\"\n                  >\n                    <g>\n                      <g filter=\"url(#k4zga)\">\n                        <path fill=\"none\" d=\"M2 1h104v34H59l-5 5-5-5H2z\" mask=\"url(&quot;#k4zgb&quot;)\"/>\n                        <path fill-opacity=\".35\" d=\"M2 1h104v34H59l-5 5-5-5H2z\"/>\n                      </g>\n                      <path fill=\"#931e1d\" d=\"M2 1h104v34H59l-5 5-5-5H2z\"/>\n                      <path fill=\"none\" stroke=\"#fff\" stroke-miterlimit=\"20\" stroke-width=\"2\"\n                            d=\"M2 1h104v34H59l-5 5-5-5H2z\" clip-path=\"url(&quot;#k4zgc&quot;)\"/>\n                    </g>\n                  </g>\n\n                  <text\n                    textAnchor=\"middle\"\n                     y={-30}\n                    style={{\n                      color: '#ffffff',\n                      font_family: 'Open Sans',\n                      font_size: '12px',\n                      font_weight: 700,\n                      letter_spacing: '-0.26px'\n                    }}\n                  >\n                    {('$' + toCountry.value.total + '\\n')}\n                  </text>\n                  <text\n                    textAnchor=\"middle\"\n                    y={-15}\n                    style={{\n                      color: '#ffffff',\n                      font_family: 'Open Sans',\n                      font_size: '10px',\n                      font_weight: 700,\n                      letter_spacing: '-0.26px'\n                    }}\n                  >\n                    {(toCountry.value.count + ' ' + 'transactions')}\n                  </text>\n                </Marker>\n\n              })\n            )}\n          </ComposableMap>\n          <div onClick={this.showAllHandler}>Show All</div>\n        </div>\n      );\n    }\n    return(\n      <div>\n        {all}\n      </div>\n    )\n  }\n}\n\nexport default TransferMapComponent;","/* eslint-disable no-unused-vars */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Icon from '@material-ui/core/Icon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, TimePicker, DatePicker, DateTimePicker } from '@material-ui/pickers';\nimport { Button } from '@material-ui/core';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nclass MTableFilterRow extends React.Component {\n  getLocalizationData = () => ({ ...MTableFilterRow.defaultProps.localization, ...this.props.localization });\n  getLocalizedFilterPlaceHolder = columnDef => columnDef.filterPlaceholder || this.getLocalizationData().filterPlaceHolder || \"\";\n\n  renderLookupFilter = (columnDef) => (\n    <FormControl style={{ width: '100%' }}>\n      <InputLabel htmlFor=\"select-multiple-checkbox\" style={{marginTop: -16}}>{this.getLocalizedFilterPlaceHolder(columnDef)}</InputLabel>\n      <Select\n        multiple\n        value={columnDef.tableData.filterValue || []}\n        onChange={event => {\n          this.props.onFilterChanged(columnDef.tableData.id, event.target.value);\n        }}\n        input={<Input id=\"select-multiple-checkbox\" />}\n        renderValue={selecteds => selecteds.map(selected => columnDef.lookup[selected]).join(', ')}\n        MenuProps={MenuProps}\n        style={{marginTop: 0}}\n      >\n        {\n          Object.keys(columnDef.lookup).map(key => (\n            <MenuItem key={key} value={key}>\n              <Checkbox checked={columnDef.tableData.filterValue ? columnDef.tableData.filterValue.indexOf(key.toString()) > -1 : false} />\n              <ListItemText primary={columnDef.lookup[key]} />\n            </MenuItem>\n          ))\n        }\n      </Select>\n    </FormControl>\n  )\n\n  renderFilterComponent = (columnDef) => (\n    React.createElement(columnDef.filterComponent, { columnDef: columnDef, onFilterChanged: this.props.onFilterChanged })\n  )\n\n  renderBooleanFilter = (columnDef) => (\n    <Checkbox\n      indeterminate={columnDef.tableData.filterValue === undefined}\n      checked={columnDef.tableData.filterValue === 'checked'}\n      onChange={() => {\n        let val;\n        if (columnDef.tableData.filterValue === undefined) {\n          val = 'checked';\n        } else if (columnDef.tableData.filterValue === 'checked') {\n          val = 'unchecked';\n        }\n\n        this.props.onFilterChanged(columnDef.tableData.id, val);\n      }}\n    />\n  )\n\n  renderDefaultFilter = (columnDef) => {\n    const localization = this.getLocalizationData();\n    const FilterIcon = this.props.icons.Filter;\n    return (\n      <TextField\n        style={columnDef.type === 'numeric' ? { float: 'right' } : {}}\n        type={columnDef.type === 'numeric' ? 'number' : 'search'}\n        value={columnDef.tableData.filterValue || ''}\n        placeholder={this.getLocalizedFilterPlaceHolder(columnDef)}\n        onChange={(event) => {\n          this.props.onFilterChanged(columnDef.tableData.id, event.target.value);\n        }}\n        inputProps={{'aria-label': `filter data by ${columnDef.title}`}}\n        InputProps={this.props.hideFilterIcons || columnDef.hideFilterIcon ? undefined : {\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <Tooltip title={localization.filterTooltip}>\n                <FilterIcon/>\n              </Tooltip>\n            </InputAdornment>\n          )\n        }}\n      />\n    );\n  }\n\n  renderDateTypeFilter = (columnDef) => {\n    const onDateInputChange = date => this.props.onFilterChanged(columnDef.tableData.id, date);\n    const pickerProps = {\n      value: columnDef.tableData.filterValue || null,\n      onChange: onDateInputChange,\n      placeholder: this.getLocalizedFilterPlaceHolder(columnDef),\n      clearable: true\n    };\n\n    let dateInputElement = null;\n    if (columnDef.type === 'date') {\n      dateInputElement = (\n        <DatePicker {...pickerProps} />\n      );\n    } else if (columnDef.type === 'datetime') {\n      dateInputElement = (\n        <DateTimePicker {...pickerProps} />\n      );\n    } else if (columnDef.type === 'time') {\n      dateInputElement = (\n        <TimePicker {...pickerProps} />\n      );\n    }\n    return (\n      <MuiPickersUtilsProvider\n        utils={DateFnsUtils}\n        locale={this.props.localization.dateTimePickerLocalization}>\n        {dateInputElement}\n      </MuiPickersUtilsProvider>\n    );\n  }\n\n  getComponentForColumn(columnDef) {\n    if (columnDef.filtering === false) {\n      return null;\n    }\n\n    if (columnDef.field || columnDef.customFilterAndSearch) {\n      if (columnDef.filterComponent) {\n        return this.renderFilterComponent(columnDef);\n      } else if (columnDef.lookup) {\n        return this.renderLookupFilter(columnDef);\n      } else if (columnDef.type === 'boolean') {\n        return this.renderBooleanFilter(columnDef);\n      } else if (['date', 'datetime', 'time'].includes(columnDef.type)) {\n        return this.renderDateTypeFilter(columnDef);\n      } else {\n        return this.renderDefaultFilter(columnDef);\n      }\n    }\n  }\n\n\n\n  render() {\n    const columns = this.props.columns\n      .filter(columnDef => !columnDef.hidden && !(columnDef.tableData.groupOrder > -1))\n      .sort((a, b) => a.tableData.columnOrder - b.tableData.columnOrder)\n      .map(columnDef => (\n        <TableCell key={columnDef.tableData.id} style={{ ...this.props.filterCellStyle, ...columnDef.filterCellStyle }}>\n          {this.getComponentForColumn(columnDef)}\n        </TableCell>\n      ));\n\n    if (this.props.selection) {\n      columns.splice(0, 0, <TableCell padding=\"none\" key=\"key-selection-column\" />);\n    }\n\n    if (this.props.hasActions) {\n      if (this.props.actionsColumnIndex === -1) {\n        columns.push(<TableCell key=\"key-action-column\" />);\n      } else {\n        let endPos = 0;\n        if (this.props.selection) {\n          endPos = 1;\n        }\n        columns.splice(this.props.actionsColumnIndex + endPos, 0, <TableCell key=\"key-action-column\" />);\n      }\n    }\n\n    if (this.props.hasDetailPanel) {\n      columns.splice(0, 0, <TableCell padding=\"none\" key=\"key-detail-panel-column\" />);\n    }\n\n    if (this.props.isTreeData > 0) {\n      columns.splice(0, 0,\n        <TableCell\n          padding=\"none\"\n          key={\"key-tree-data-filter\"}\n        />\n      );\n    }\n\n    ///////////Здесь был Атай///////////\n\n    columns.splice(-1, 1, \n    <TableCell key={\"filters-reset-button\"}>\n      <button \n          onClick={this.props.resetFilters}\n          style={{\n            width: \"30\",\n            color: \"#515151\",\n            fontFamily: \"Open Sans', sans-serif\",\n            fontSize: \"14px\",\n            textDecoration: \"underline\",\n            backgroundColor: 'Transparent',\n            backgroundRepeat:'no-repeat',\n            border: 'none',\n            cursor:'pointer',\n            overflow: 'hidden',\n            outline:'none',\n          }} >Reset all filters\n    </button>\n    </TableCell>\n    );\n    \n    ///////////Атай был здесь///////////\n    \n\n\n    this.props.columns\n      .filter(columnDef => columnDef.tableData.groupOrder > -1)\n      .forEach(columnDef => {\n        columns.splice(0, 0, <TableCell padding=\"checkbox\" key={\"key-group-filter\" + columnDef.tableData.id} />);\n      });\n\n    return (\n      <TableRow style={{ height: 10 }}>\n        {columns}\n      </TableRow>\n      \n    );\n  }\n}\n\nMTableFilterRow.defaultProps = {\n  columns: [],\n  selection: false,\n  hasActions: false,\n  localization: {\n    filterTooltip: 'Filter'\n  },\n  hideFilterIcons: false,\n};\n\nMTableFilterRow.propTypes = {\n  columns: PropTypes.array.isRequired,\n  hasDetailPanel: PropTypes.bool.isRequired,\n  isTreeData: PropTypes.bool.isRequired,\n  onFilterChanged: PropTypes.func.isRequired,\n  filterCellStyle: PropTypes.object,\n  selection: PropTypes.bool.isRequired,\n  actionsColumnIndex: PropTypes.number,\n  hasActions: PropTypes.bool,\n  localization: PropTypes.object,\n  hideFilterIcons: PropTypes.bool,\n};\n\nexport default MTableFilterRow;\n","/* eslint-disable no-unused-vars */\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/* eslint-enable no-unused-vars */\n\nclass MTableBody extends React.Component {\n  renderEmpty(emptyRowCount, renderData) {\n    const rowHeight = this.props.options.padding === 'default' ? 49 : 36;\n    const localization = { ...MTableBody.defaultProps.localization, ...this.props.localization };\n    if (this.props.options.showEmptyDataSourceMessage && renderData.length === 0) {\n      let addColumn = 0;\n      if (this.props.options.selection) {\n        addColumn++;\n      }\n      if (this.props.actions && this.props.actions.filter(a => a.position === \"row\" || typeof a === \"function\").length > 0) {\n        addColumn++;\n      }\n      if (this.props.hasDetailPanel) {\n        addColumn++;\n      }\n      if (this.props.isTreeData) {\n        addColumn++;\n      }\n      return (\n        <TableRow style={{ height: rowHeight * (this.props.options.paging && this.props.options.emptyRowsWhenPaging ? this.props.pageSize : 1) }} key={'empty-' + 0} >\n          <TableCell style={{ paddingTop: 0, paddingBottom: 0, textAlign: 'center' }} colSpan={this.props.columns.length + addColumn} key=\"empty-\">\n            {localization.emptyDataSourceMessage}\n          </TableCell>\n        </TableRow>\n      );\n    } else if (this.props.options.emptyRowsWhenPaging) {\n      return (\n        <React.Fragment>\n          {[...Array(emptyRowCount)].map((r, index) => <TableRow style={{ height: rowHeight }} key={'empty-' + index} />)}\n          {emptyRowCount > 0 && <TableRow style={{ height: 1 }} key={'empty-last1'} />}\n        </React.Fragment>\n      );\n    }\n  }\n\n  renderUngroupedRows(renderData) {\n    return renderData.map((data, index) => {\n      if (data.tableData.editing) {\n        return (\n          <this.props.components.EditRow\n            columns={this.props.columns.filter(columnDef => { return !columnDef.hidden })}\n            components={this.props.components}\n            data={data}\n            icons={this.props.icons}\n            localization={{ ...MTableBody.defaultProps.localization.editRow, ...this.props.localization.editRow, dateTimePickerLocalization: this.props.localization.dateTimePickerLocalization }}\n            key={index}\n            mode={data.tableData.editing}\n            options={this.props.options}\n            isTreeData={this.props.isTreeData}\n            detailPanel={this.props.detailPanel}\n            onEditingCanceled={this.props.onEditingCanceled}\n            onEditingApproved={this.props.onEditingApproved}\n            getFieldValue={this.props.getFieldValue}\n          />\n        );\n      }\n      else {\n        return (\n          <this.props.components.Row\n            components={this.props.components}\n            icons={this.props.icons}\n            data={data}\n            index={index}\n            key={\"row-\" + data.tableData.id}\n            level={0}\n            options={this.props.options}\n            localization={{ ...MTableBody.defaultProps.localization.editRow, ...this.props.localization.editRow }}\n            onRowSelected={this.props.onRowSelected}\n            actions={this.props.actions}\n            columns={this.props.columns}\n            getFieldValue={this.props.getFieldValue}\n            detailPanel={this.props.detailPanel}\n            path={[index + this.props.pageSize * this.props.currentPage]}\n            onToggleDetailPanel={this.props.onToggleDetailPanel}\n            onRowClick={this.props.onRowClick}\n            isTreeData={this.props.isTreeData}\n            onTreeExpandChanged={this.props.onTreeExpandChanged}\n            onEditingCanceled={this.props.onEditingCanceled}\n            onEditingApproved={this.props.onEditingApproved}\n            hasAnyEditingRow={this.props.hasAnyEditingRow}\n            treeDataMaxLevel={this.props.treeDataMaxLevel}\n          />\n        );\n      }\n    });\n  }\n\n  renderGroupedRows(groups, renderData) {\n    return renderData.map((groupData, index) => (\n      <this.props.components.GroupRow\n        actions={this.props.actions}\n        key={groupData.value == null ? ('' + index) : groupData.value}\n        columns={this.props.columns}\n        components={this.props.components}\n        detailPanel={this.props.detailPanel}\n        getFieldValue={this.props.getFieldValue}\n        groupData={groupData}\n        groups={groups}\n        icons={this.props.icons}\n        level={0}\n        path={[index + this.props.pageSize * this.props.currentPage]}\n        onGroupExpandChanged={this.props.onGroupExpandChanged}\n        onRowSelected={this.props.onRowSelected}\n        onRowClick={this.props.onRowClick}\n        onEditingCanceled={this.props.onEditingCanceled}\n        onEditingApproved={this.props.onEditingApproved}\n        onToggleDetailPanel={this.props.onToggleDetailPanel}\n        onTreeExpandChanged={this.props.onTreeExpandChanged}\n        options={this.props.options}\n        isTreeData={this.props.isTreeData}\n        hasAnyEditingRow={this.props.hasAnyEditingRow}\n        localization={{ ...MTableBody.defaultProps.localization.editRow, ...this.props.localization.editRow }}\n      />\n    ));\n  }\n\n\n  render() {\n    let renderData = this.props.renderData;\n    const groups = this.props.columns\n      .filter(col => col.tableData.groupOrder > -1)\n      .sort((col1, col2) => col1.tableData.groupOrder - col2.tableData.groupOrder);\n\n    let emptyRowCount = 0;\n    if (this.props.options.paging) {\n      emptyRowCount = this.props.pageSize - renderData.length;\n    }\n\n    return (\n      <TableBody>\n        {this.props.options.filtering &&\n          <this.props.components.FilterRow\n            columns={this.props.columns.filter(columnDef => !columnDef.hidden)}\n            icons={this.props.icons}\n            hasActions={this.props.actions.filter(a => a.position === \"row\" || typeof a === \"function\").length > 0}\n            actionsColumnIndex={this.props.options.actionsColumnIndex}\n            onFilterChanged={this.props.onFilterChanged}\n            selection={this.props.options.selection}\n            localization={{ ...MTableBody.defaultProps.localization.filterRow, ...this.props.localization.filterRow, dateTimePickerLocalization: this.props.localization.dateTimePickerLocalization }}\n            hasDetailPanel={!!this.props.detailPanel}\n            isTreeData={this.props.isTreeData}\n            filterCellStyle={this.props.options.filterCellStyle}\n            hideFilterIcons={this.props.options.hideFilterIcons}\n            resetFilters={this.props.resetFilters} // И тут был Атай\n          />\n        }\n\n        {this.props.showAddRow && this.props.options.addRowPosition === \"first\" &&\n          <this.props.components.EditRow\n            columns={this.props.columns.filter(columnDef => { return !columnDef.hidden })}\n            data={this.props.initialFormData}\n            components={this.props.components}\n            icons={this.props.icons}\n            key=\"key-add-row\"\n            mode=\"add\"\n            localization={{ ...MTableBody.defaultProps.localization.editRow, ...this.props.localization.editRow }}\n            options={this.props.options}\n            isTreeData={this.props.isTreeData}\n            detailPanel={this.props.detailPanel}\n            onEditingCanceled={this.props.onEditingCanceled}\n            onEditingApproved={this.props.onEditingApproved}\n            getFieldValue={this.props.getFieldValue}\n          />\n        }\n\n        {groups.length > 0 ?\n          this.renderGroupedRows(groups, renderData) :\n          this.renderUngroupedRows(renderData)\n        }\n\n        {this.props.showAddRow && this.props.options.addRowPosition === \"last\" &&\n          <this.props.components.EditRow\n            columns={this.props.columns.filter(columnDef => { return !columnDef.hidden })}\n            data={this.props.initialFormData}\n            components={this.props.components}\n            icons={this.props.icons}\n            key=\"key-add-row\"\n            mode=\"add\"\n            localization={{ ...MTableBody.defaultProps.localization.editRow, ...this.props.localization.editRow }}\n            options={this.props.options}\n            isTreeData={this.props.isTreeData}\n            detailPanel={this.props.detailPanel}\n            onEditingCanceled={this.props.onEditingCanceled}\n            onEditingApproved={this.props.onEditingApproved}\n            getFieldValue={this.props.getFieldValue}\n          />\n        }\n        {this.renderEmpty(emptyRowCount, renderData)}\n      </TableBody>\n    );\n  }\n}\n\nMTableBody.defaultProps = {\n  actions: [],\n  currentPage: 0,\n  pageSize: 5,\n  renderData: [],\n  selection: false,\n  localization: {\n    emptyDataSourceMessage: 'No records to display',\n    filterRow: {},\n    editRow: {}\n  }\n};\n\nMTableBody.propTypes = {\n  actions: PropTypes.array,\n  components: PropTypes.object.isRequired,\n  columns: PropTypes.array.isRequired,\n  currentPage: PropTypes.number,\n  detailPanel: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))]),\n  getFieldValue: PropTypes.func.isRequired,\n  hasAnyEditingRow: PropTypes.bool,\n  hasDetailPanel: PropTypes.bool.isRequired,\n  icons: PropTypes.object.isRequired,\n  isTreeData: PropTypes.bool.isRequired,\n  onRowSelected: PropTypes.func,\n  options: PropTypes.object.isRequired,\n  pageSize: PropTypes.number,\n  renderData: PropTypes.array,\n  initialFormData: PropTypes.object,\n  selection: PropTypes.bool.isRequired,\n  showAddRow: PropTypes.bool,\n  treeDataMaxLevel: PropTypes.number,\n  localization: PropTypes.object,\n  onFilterChanged: PropTypes.func,\n  onGroupExpandChanged: PropTypes.func,\n  onToggleDetailPanel: PropTypes.func.isRequired,\n  onTreeExpandChanged: PropTypes.func.isRequired,\n  onRowClick: PropTypes.func,\n  onEditingCanceled: PropTypes.func,\n  onEditingApproved: PropTypes.func,\n};\n\nexport default MTableBody;\n","import React, { Component } from 'react';\nimport MaterialTable from 'material-table';\nimport config from '../config';\nimport FilterRow from './m-table-filter-row'\nimport MTBody from './m-table-body'\n\n\nconst objColumns = Object.values(config.columns)\n\n\nclass TransferTableComponent extends Component {\n\tstate = {\n\t\tcolumns: [],\n\t\tdata: []\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setData()\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.filterCountry !== this.props.filterCountry) {\n\t\t\tif (this.props.filterCountry !== '') {\n\t\t\t\tthis.filterCountry(this.props.filterCountry)\n\t\t\t}\n\t\t}\n\t}\n\n\tsetData = () => {\n\t\tthis.setState({ data: this.props.data })\n\t\tlet newData = this.getLookupData(this.props.data)\n\t\tthis.initLookup(newData)\n\t\tthis.loadImage()\n\t}\n\n\tloadImage = () => {\n\t\tobjColumns.map(obj => {\n\t\t\tif (obj.type === 'image' && obj.lookup !== '') {\n\t\t\t\tlet keys = Object.keys(obj.lookup)\n\t\t\t\tkeys.map(key => {\n\t\t\t\t\tobj.lookup[key] = <img src={obj.lookup[key]} alt={key} />\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\tthis.setState({columns: objColumns})\n\t}\n\n\t\n\tgetLookupData =(data)=> {\n\tlet cols = Object.keys(data[0])\n\tlet newData = cols.reduce((a,b)=> (a[b]={},a),{});\n\tthis.props.data.map(row =>\n\t\t{\n\t\t\tcols.map(col => {\n\t\t\t\tlet val = row[col]\n\t\t\t\tnewData[col][val] = val\n\t\t\t})\n\t\t})\t\n\t\treturn [newData, cols]\n\t}\n\n\tinitLookup =(data)=> {\n\t\tlet newData = data[0]\n\t\tlet keys = data[1]\n\n\t\tkeys.map(key => {\n\t\t\tobjColumns.forEach(col => {\n\t\t\t\tif (col.field === key && col.lookup === '' && (col.type === '' || col.type === 'numeric')) {\n\t\t\t\t\tcol.lookup = newData[key]\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t}\n\t\n\tfilterCountry = (country) => {\n\t\tobjColumns.forEach(col => {\n\t\t\tif (col.field === \"country\") {\n\t\t\t\tcol.tableData.filterValue = [country]\n\t\t\t}\n\t\t})\n\t\tthis.setState({columns: objColumns})\n\t}\n\n\tresetFilters = () => {\n\t\tobjColumns.forEach(col => {\n\t\t\tcol.tableData.filterValue = \"\"\n\t\t\tconsole.log(col.tableData)\n\t\t})\n\t\tthis.setState({columns: objColumns})\n\t}\n\n\t\n\n\n\trender() {\n\t\treturn (\n\t\t\t<MaterialTable\n\t\t\t\tcolumns={this.state.columns}\n\t\t\t\tdata={this.state.data}\n\t\t\t\tcomponents={{\n\t\t\t\tFilterRow: props => {\n\t\t\t\t\treturn\t<FilterRow {...props}/>},\n\t\t\t\t\tBody: props => <MTBody {...props} resetFilters={this.resetFilters}/>\n\t\t\t\t}}\n\n\t\t\t\tlocalization={{\n\t\t\t\t\ttoolbar: { searchPlaceholder: \"Search the data…\" },\n\t\t\t\t}}\n\n\t\t\t\toptions={{\n\t\t\t\t\t...config.table,\n\t\t\t\t\trowStyle: (data, index) => {\n\t\t\t\t\t\tif (index % 2 === 0 && !config.table.rowStyle.backgroundColor) {\n\t\t\t\t\t\t\treturn { ...config.table.rowStyle, backgroundColor: \"#e5e5e5\" }\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {return {...config.table.rowStyle}}\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t)\n\t}\n}\n\nexport default TransferTableComponent;","import React, { Component } from 'react';\n\nimport TransferMapComponent from \"./TransferMapComponent/TransferMapComponent\";\nimport TransferTableComponent from \"./TransferTableComponent/TransferTableComponent\";\nimport config from \"./config\";\nimport {csv} from \"d3\";\n\n\nclass App extends Component {\n  state = {\n    ready: false,\n    data: {},\n    filterCountry: ''\n  }\n\n  componentDidMount() {\n    csv(config.csvUrl)\n      .then(d => this.setState({data: d, ready: true}))\n  }\n  \n  handleCountryClick = (country) => {\n    console.log(country)\n    this.setState({filterCountry: country})\n    console.log(this.state.filterCountry)\n  }\n\n  render() {\n    let all = null;\n    if (this.state.ready) {\n      all = (\n        <div>\n          <TransferMapComponent data={this.state.data} handleCountryClick={this.handleCountryClick} />\n          <TransferTableComponent data={this.state.data} filterCountry={this.state.filterCountry} />\n        </div>\n      );\n    }\n    return (\n      <div className=\"App\">\n        {all}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}