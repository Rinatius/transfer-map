{"version":3,"sources":["config.js","TransferMapComponent/TransferMapComponent.js","TransferTableComponent/m-table-filter-row.js","TransferTableComponent/m-table-body.js","TransferTableComponent/TransferTableComponent.js","App.js","serviceWorker.js","index.js"],"names":["tableOptions","csvUrl","mapOptions","fill","fontSize","fontWeight","letterSpacing","columns","transactionDate","title","field","hidden","searchable","sorting","grouping","filtering","type","defaultFilter","lookup","filterPlaceholder","cellStyle","width","height","color","fontFamily","paidBy","paidTo","amount","fromCountry","country","purpose","bankSender","confidence","confirmed","textAlign","proof","internal","bank","electronic","customs","table","search","paging","pageSize","hideFilterIcons","showTitle","pageSizeOptions","paginationType","padding","searchFieldAlignment","searchFieldStyle","boxShadow","border","backgroundColor","headerStyle","borderWidth","borderTopWidth","borderBottomWidth","borderColor","borderStyle","lineHeight","rowStyle","Set","require","TransferMapComponent","config","countries","pairs","capitals","dataScaler","state","ready","conf","data","visibleCountries","visiblePairs","focusCountry","extractCountries","forEach","row","add","from_country","to_country","nestPairs","nest","key","d","rollup","value","count","length","total","sum","entries","showAllHandler","setState","countryClickHandler","has","props","handleCountryClick","prevProps","resetMap","this","json","c","then","map","totals","values","t","push","console","log","scaleLinear","domain","extent","range","name","all","projectionConfig","scale","xOffset","yOffset","geography","geographies","geo","properties","countryFill","passive_color","focus_color","active_color","rsmKey","onClick","stroke","toCountry","from","get","latlng","slice","reverse","to","preserveMarkerAspect","strokeWidth","strokeLinecap","coordinates","id","x","y","filterUnits","dy","in","result","stdDeviation","transform","filter","mask","fill-opacity","stroke-miterlimit","stroke-width","clip-path","textAnchor","style","label_text_style","toLocaleString","Component","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","MTableFilterRow","getLocalizationData","defaultProps","localization","getLocalizedFilterPlaceHolder","columnDef","filterPlaceHolder","renderLookupFilter","FormControl","InputLabel","htmlFor","marginTop","Select","multiple","tableData","filterValue","onChange","event","onFilterChanged","target","input","Input","renderValue","selecteds","selected","join","Object","keys","MenuItem","Checkbox","checked","indexOf","toString","ListItemText","primary","renderFilterComponent","React","filterComponent","renderBooleanFilter","indeterminate","undefined","val","renderDefaultFilter","FilterIcon","icons","Filter","TextField","float","placeholder","inputProps","InputProps","hideFilterIcon","startAdornment","InputAdornment","position","Tooltip","filterTooltip","renderDateTypeFilter","pickerProps","date","clearable","dateInputElement","DatePicker","DateTimePicker","TimePicker","utils","DateFnsUtils","locale","dateTimePickerLocalization","customFilterAndSearch","includes","groupOrder","sort","a","b","columnOrder","TableCell","filterCellStyle","getComponentForColumn","selection","splice","hasActions","actionsColumnIndex","endPos","hasDetailPanel","isTreeData","resetFilters","textDecoration","backgroundRepeat","cursor","overflow","outline","TableRow","MTableBody","emptyRowCount","renderData","rowHeight","options","showEmptyDataSourceMessage","addColumn","actions","emptyRowsWhenPaging","paddingTop","paddingBottom","colSpan","emptyDataSourceMessage","Array","r","index","editing","components","EditRow","editRow","mode","detailPanel","onEditingCanceled","onEditingApproved","getFieldValue","Row","level","onRowSelected","path","currentPage","onToggleDetailPanel","onRowClick","onTreeExpandChanged","hasAnyEditingRow","treeDataMaxLevel","groups","groupData","GroupRow","onGroupExpandChanged","col","col1","col2","TableBody","FilterRow","filterRow","showAddRow","addRowPosition","initialFormData","renderGroupedRows","renderUngroupedRows","renderEmpty","objColumns","TransferTableComponent","setData","newData","getLookupData","initLookup","loadImage","obj","src","alt","cols","reduce","filterCountry","Body","toolbar","searchPlaceholder","App","handleResetMap","csv","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5a0adbbc.chunk.js","sourcesContent":["const tableOptions = {\n\n  csvUrl: 'https://firebasestorage.googleapis.com/v0/b/newagent-b0720.appspot.com/o/transfer-table%2Fmockup.csv?alt=media&token=82d1e6d6-e634-492d-a7a7-32223735c25f',\n\n  mapOptions: {\n    \"active_color\": \"#dbabac\",\n    \"passive_color\": \"#DDD\",\n    \"focus_color\": \"#bd3d3f\",\n    \"label_text_style\": {\n      fill: '#ffffff',\n      fontSize: '12px',\n      fontWeight: '900',\n      letterSpacing: '-0.26px'\n    },\n    \"capitals\": \"https://gist.githubusercontent.com/erdem/8c7d26765831d0f9a8c62f02782ae00d/raw/248037cd701af0a4957cce340dabb0fd04e38f4c/countries.json\"\n  },\n\n  columns: {\n    transactionDate: {\n      title: \"Transaction date\",\n      field: \"transactionDate\",\n      hidden: false,\n      searchable: true,\n      sorting: true,\n      grouping: true,\n      filtering: true,\n      type: 'date',\n      defaultFilter: '',\n      lookup: '',\n      filterPlaceholder: 'Transaction date',\n      cellStyle: {\n        width: '114px',\n        height: '19px',\n        color: '#515151',\n        fontFamily: 'Open Sans, sans-serif',\n        fontSize: '14px',\n        letterSpacing: '-0.3px',\n      },\n    },\n    paidBy: {\n      title: \"Paid by\",\n      field: \"paidBy\",\n      hidden: false,\n      searchable: true,\n      sorting: true,\n      grouping: true,\n      filtering: true,\n      defaultFilter: '',\n      lookup: '',\n      type: '',\n      filterPlaceholder: 'Payer...',\n      cellStyle: {\n        width: '114px',\n        height: '19px',\n        color: '#515151',\n        fontFamily: 'Open Sans, sans-serif',\n        fontSize: '14px',\n        letterSpacing: '-0.3px',\n      },\n    },\n    paidTo: {\n      title: \"Paid to\",\n      field: \"paidTo\",\n      hidden: false,\n      searchable: true,\n      sorting: true,\n      grouping: true,\n      filtering: true,\n      defaultFilter: '',\n      lookup: '',\n      type: '',\n      filterPlaceholder: 'Recipient...',\n      cellStyle: {\n        width: '114px',\n        height: '19px',\n        color: '#515151',\n        fontFamily: 'Open Sans, sans-serif',\n        fontSize: '14px',\n        letterSpacing: '-0.3px',\n      },\n    },\n    amount: {\n      title: \"Amount\",\n      field: \"amount\",\n      hidden: false,\n      searchable: true,\n      sorting: true,\n      grouping: true,\n      filtering: true,\n      defaultFilter: '',\n      lookup: '',\n      type: 'currency',\n      cellStyle: {\n        width: '114px',\n        height: '19px',\n        color: '#515151',\n        fontFamily: 'Open Sans, sans-serif',\n        fontSize: '14px',\n        letterSpacing: '-0.3px',\n      },\n    },\n    fromCountry: {\n      title: \"From Country\",\n      field: \"fromCountry\",\n      hidden: false,\n      searchable: true,\n      sorting: true,\n      grouping: true,\n      filtering: true,\n      defaultFilter: '',\n      lookup: '',\n      type: '',\n      filterPlaceholder: 'From country',\n      cellStyle: {\n        width: '114px',\n        height: '19px',\n        color: '#515151',\n        fontFamily: 'Open Sans, sans-serif',\n        fontSize: '14px',\n        letterSpacing: '-0.3px',\n      },\n    },\n    country: {\n      title: \"Country\",\n      field: \"country\",\n      hidden: false,\n      searchable: true,\n      sorting: true,\n      grouping: true,\n      filtering: true,\n      defaultFilter: '',\n      lookup: '',\n      type: '',\n      filterPlaceholder: 'To country...',\n      cellStyle: {\n        width: '114px',\n        height: '19px',\n        color: '#515151',\n        fontFamily: 'Open Sans, sans-serif',\n        fontSize: '14px',\n        letterSpacing: '-0.3px',\n      },\n    },\n    purpose: {\n      title: \"Purpose\",\n      field: \"purpose\",\n      hidden: false,\n      searchable: true,\n      sorting: true,\n      grouping: true,\n      filtering: true,\n      defaultFilter: '',\n      lookup: '',\n      type: '',\n      cellStyle: {\n        width: '114px',\n        height: '19px',\n        color: '#515151',\n        fontFamily: 'Open Sans, sans-serif',\n        fontSize: '14px',\n        letterSpacing: '-0.3px',\n      },\n    },\n    type: {\n      title: \"Type\",\n      field: \"type\",\n      hidden: false,\n      searchable: true,\n      sorting: true,\n      grouping: true,\n      filtering: true,\n      defaultFilter: '',\n      lookup: '',\n      type: '',\n      cellStyle: {\n        width: '50px',\n        height: '19px',\n        color: '#515151',\n        fontFamily: 'Open Sans, sans-serif',\n        fontSize: '14px',\n        letterSpacing: '-0.3px',\n      },\n    },\n    bankSender: {\n      title: \"Bank sender\",\n      field: \"bankSender\",\n      hidden: false,\n      searchable: true,\n      sorting: true,\n      grouping: true,\n      filtering: true,\n      defaultFilter: '',\n      lookup: '',\n      type: '',\n      filterPlaceholder: 'Bank...',\n      cellStyle: {\n        width: '114px',\n        height: '19px',\n        color: '#515151',\n        fontFamily: 'Open Sans, sans-serif',\n        fontSize: '14px',\n        letterSpacing: '-0.3px',\n      },\n    },\n    confidence: {\n      title: \"Confidence\",\n      field: \"confidence\",\n      hidden: false,\n      searchable: true,\n      sorting: true,\n      grouping: true,\n      filtering: false,\n      lookup: {confirmed: 'https://firebasestorage.googleapis.com/v0/b/newagent-b0720.appspot.com/o/transfer-table%2FConfirmed.svg?alt=media&token=60873b2f-26ed-4c14-b210-8f5467709e1c'},\n      defaultFilter: '',\n      type: 'image',\n      cellStyle: {textAlign: 'center',}\n    },\n    proof: {\n      title: \"Proof\",\n      field: \"proof\",\n      hidden: false,\n      searchable: true,\n      sorting: true,\n      grouping: true,\n      filtering: false,\n      lookup: {\n        internal: 'https://firebasestorage.googleapis.com/v0/b/newagent-b0720.appspot.com/o/transfer-table%2FInternal.svg?alt=media&token=ea2ac9bf-5026-45ff-8074-0e5bd08b5e8a',\n        bank: 'https://firebasestorage.googleapis.com/v0/b/newagent-b0720.appspot.com/o/transfer-table%2FBank.svg?alt=media&token=cf2d58c9-c18e-48e1-9033-8739f85a66eb',\n        electronic: 'https://firebasestorage.googleapis.com/v0/b/newagent-b0720.appspot.com/o/transfer-table%2FElectronic.svg?alt=media&token=0a7b3d35-71a8-4f46-85a0-9bf681e7c2b0',\n        customs: 'https://firebasestorage.googleapis.com/v0/b/newagent-b0720.appspot.com/o/transfer-table%2FCustoms.svg?alt=media&token=71ecfae4-1c9e-459d-82a3-e8da707dbb9d'\n      },\n      defaultFilter: '',\n      type: 'image',\n      cellStyle: {textAlign: 'center'}\n    },\n  },\n  table: {\n    search: true,\n    sorting: true,\n    filtering: true,\n    grouping: false,\n    paging: true,\n    pageSize: 20,\n\n    hideFilterIcons: true,\n    showTitle: false,\n    pageSizeOptions: [],\n    paginationType: 'stepped',\n    padding: 'dense',\n    searchFieldAlignment: 'left',\n\n    searchFieldStyle: {\n      width: '100%',\n      height: '35px',\n      boxShadow: 'inset 1px 2px 4px rgba(0, 0, 0, 0.35)',\n      border: '1px solid #979797',\n      backgroundColor: '#ffffff'\n    },\n\n    headerStyle: {\n      borderWidth: 0,\n      borderTopWidth: 2,\n      borderBottomWidth: 2,\n      borderColor: '#931e1d',\n      borderStyle: 'solid',\n      width: '80px',\n      height: '29px',\n      color: '#515151',\n      fontFamily: 'Open Sans, sans-serif',\n      fontSize: '14px',\n      fontWeight: '700',\n      letterSpacing: '-0.3px',\n      lineHeight: '14px',\n    },\n\n    rowStyle: {\n      height: '37px',\n    }\n  }\n}\n\n\n// myJSON = JSON.stringify(tableOptions,null, 4);\nexport default tableOptions\n\n// export default tableOptions\n\n\n//     console.log(myJSON)\n//     console.log(typeof(myJSON))\n\n\n// let objJSON = JSON.parse(myJSON);\n//     console.log(objJSON)\n//     console.log(typeof(objJSON))    \n\n// let newJSON = JSON.stringify(objJSON,null, 4);\n//     console.log(newJSON)\n//     console.log(typeof(newJSON))","import React, { Component } from 'react'\nimport {\n  ComposableMap,\n  ZoomableGroup,\n  Geographies,\n  Geography,\n  Line,\n  Marker\n} from 'react-simple-maps'\n\nimport {\n  csv,\n  json,\n  nest,\n  sum,\n  extent,\n  scaleLinear\n} from 'd3'\n\nimport config from '../config';\n\nconst { Set } = require('immutable');\n\nconst configURL = 'https://firebasestorage.googleapis.com/v0/b/newagent-b0720.appspot.com/o/transfer-map%2Fmap_config.json?alt=media&token=170acf67-7f33-4da3-ba43-e01b6620469a'\nconst geoUrl = 'https://firebasestorage.googleapis.com/v0/b/newagent-b0720.appspot.com/o/transfer-map%2Fcountries-110m.json?alt=media&token=94f12c4b-592b-46d9-8761-a20a94c09b20'\n\n\nclass TransferMapComponent extends Component {\n\n  config = {};\n  countries = Set([]);\n  pairs = [];\n  capitals = {};\n  dataScaler = null;\n\n  state = {\n    ready: false,\n    conf: {},\n    data: [],\n    visibleCountries: Set([]),\n    visiblePairs: [],\n    focusCountry: null\n  }\n\n  extractCountries = (table) => {\n    table.forEach(row => {\n      this.countries = this.countries.add(row.from_country)\n      this.countries = this.countries.add(row.to_country)\n    })\n  }\n\n  nestPairs = (data) => {\n    return nest()\n      .key(d => d.from_country)\n      .key(d => d.to_country)\n      .rollup(value => {\n        return {\n          count: value.length,\n          total: sum(value, d => d.amount)\n        }\n    })\n      .entries(data)\n  }\n\n  showAllHandler = () => this.setState({visibleCountries: this.countries});\n\n  countryClickHandler = (country) => {\n    if (this.countries.has(country)) {\n      this.setState({\n        focusCountry: country\n      })\n      this.props.handleCountryClick(country)\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.resetMap !== this.props.resetMap && this.props.resetMap) {\n      this.setState({focusCountry: null})\n    }\n\n  }\n\n  componentDidMount() {\n    json(config.mapOptions.capitals, c => c)\n      .then(capitals => {\n        const table = this.props.data.map(row => {\n          return {\n            from_country: row[config.columns.fromCountry.field],\n            to_country: row[config.columns.country.field],\n            amount: row[config.columns.amount.field]\n          }\n        })\n        this.extractCountries(table)\n        this.pairs = this.nestPairs(table);\n        const totals = []\n        this.pairs.forEach(d => d.values.forEach(t => {\n          totals.push(t.value.total)\n        }))\n        console.log(this.pairs)\n        this.dataScaler = scaleLinear()\n          .domain(extent(totals))\n          .range([0.5, 5])\n        this.capitals = nest()\n          .key(d => d.name)\n          .map(capitals)\n        console.log(this.capitals)\n        this.setState({\n          data: table,\n          ready: true,\n          visibleCountries: this.countries,\n          visiblePairs: this.pairs\n        })\n      })\n  }\n\n  render() {\n\n    let all = null;\n    if (this.state.ready) {\n      all = (\n        <div>\n          <ComposableMap projectionConfig={{\n            scale: 230,\n            xOffset: 1000,\n            yOffset: 50\n          }}\n          handleCountryClick={this.handleCountryClick}>\n            <Geographies geography={geoUrl}>\n              {({ geographies }) =>\n                geographies.map(geo => {\n                  const c = this.state.visibleCountries.has(geo.properties.name);\n                  const focusCountry = (this.state.focusCountry === geo.properties.name);\n                  let countryFill = config.mapOptions.passive_color;\n                  if (focusCountry) {\n                    countryFill = config.mapOptions.focus_color\n                  } else if (c) {\n                    countryFill = config.mapOptions.active_color\n                  };\n                return (\n                  <Geography\n                    key={geo.rsmKey}\n                    geography={geo}\n                    onClick={() => this.countryClickHandler(geo.properties.name)}\n                    stroke='#FFF'\n                    fill={countryFill}\n                  />\n                )\n              })}\n            </Geographies>\n           \n            {this.state.visiblePairs.map(fromCountry =>\n              fromCountry.values.map(toCountry => {\n                //console.log(this.capitals)\n                //console.log(this.capitals.get(fromCountry.key))\n                // console.log(toCountry)\n                return <Line\n                  //line={{ coordinates: { start: this.capitals.get(fromCountry.key)[0].latlng.slice().reverse(), end: this.capitals.get(toCountry.key)[0].latlng.slice().reverse() }, curveStyle: \"forceUp\" }}\n                  from={this.capitals.get(fromCountry.key)[0].latlng.slice().reverse()}\n                  to={this.capitals.get(toCountry.key)[0].latlng.slice().reverse()}\n                  preserveMarkerAspect={false}\n                  stroke=\"#931e1d\"\n                  strokeWidth={this.dataScaler(toCountry.value.total)}\n                  strokeLinecap=\"round\"\n                />\n            })\n            )}\n            {this.state.visiblePairs.map(fromCountry =>\n              fromCountry.values.map(toCountry => {\n                return <Marker\n                  coordinates={this.capitals.get(toCountry.key)[0].latlng.slice().reverse()}\n                >\n\n                  <defs>\n                    <mask id=\"k4zgb\" width=\"2\" height=\"2\" x=\"-1\" y=\"-1\">\n                      <path fill=\"#fff\" d=\"M2 1h104v39H2z\"/>\n                      <path d=\"M2 1h104v34H59l-5 5-5-5H2z\"/>\n                    </mask>\n                    <filter id=\"k4zga\" width=\"128\" height=\"64\" x=\"-10\" y=\"-11\" filterUnits=\"userSpaceOnUse\">\n                      <feOffset dy=\"1\" in=\"SourceGraphic\" result=\"FeOffset1023Out\"/>\n                      <feGaussianBlur in=\"FeOffset1023Out\" result=\"FeGaussianBlur1024Out\" stdDeviation=\"0.8 0.8\"/>\n                    </filter>\n                    <clipPath id=\"k4zgc\">\n                      <path fill=\"#fff\" d=\"M2 1h104v34H59l-5 5-5-5H2z\"/>\n                    </clipPath>\n                  </defs>\n                  <g\n                    transform=\"translate(-53, -45)\"\n                  >\n                    <g>\n                      <g filter=\"url(#k4zga)\">\n                        <path fill=\"none\" d=\"M2 1h104v34H59l-5 5-5-5H2z\" mask=\"url(&quot;#k4zgb&quot;)\"/>\n                        <path fill-opacity=\".35\" d=\"M2 1h104v34H59l-5 5-5-5H2z\"/>\n                      </g>\n                      <path fill=\"#931e1d\" d=\"M2 1h104v34H59l-5 5-5-5H2z\"/>\n                      <path fill=\"none\" stroke=\"#fff\" stroke-miterlimit=\"20\" stroke-width=\"2\"\n                            d=\"M2 1h104v34H59l-5 5-5-5H2z\" clip-path=\"url(&quot;#k4zgc&quot;)\"/>\n                    </g>\n                  </g>\n\n                  <text\n                    textAnchor=\"middle\"\n                    y={-30}\n                    style={config.mapOptions.label_text_style}\n                  >\n                    {('$' + toCountry.value.total.toLocaleString(('en-US')) + '\\n')}\n                  </text>\n                  <text\n                    textAnchor=\"middle\"\n                    y={-15}\n                    style={config.mapOptions.label_text_style}\n                  >\n                    {(toCountry.value.count + ' ' + 'transactions')}\n                  </text>\n                </Marker>\n\n              })\n            )}\n          </ComposableMap>\n          <div onClick={this.showAllHandler}>Show All</div>\n        </div>\n      );\n    }\n    return(\n      <div>\n        {all}\n      </div>\n    )\n  }\n}\n\nexport default TransferMapComponent;","/* eslint-disable no-unused-vars */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Icon from '@material-ui/core/Icon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, TimePicker, DatePicker, DateTimePicker } from '@material-ui/pickers';\nimport { Button } from '@material-ui/core';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nclass MTableFilterRow extends React.Component {\n  getLocalizationData = () => ({ ...MTableFilterRow.defaultProps.localization, ...this.props.localization });\n  getLocalizedFilterPlaceHolder = columnDef => columnDef.filterPlaceholder || this.getLocalizationData().filterPlaceHolder || \"\";\n\n  renderLookupFilter = (columnDef) => (\n    <FormControl style={{ width: '100%' }}>\n      <InputLabel htmlFor=\"select-multiple-checkbox\" style={{marginTop: -16}}>{this.getLocalizedFilterPlaceHolder(columnDef)}</InputLabel>\n      <Select\n        multiple\n        value={columnDef.tableData.filterValue || []}\n        onChange={event => {\n          this.props.onFilterChanged(columnDef.tableData.id, event.target.value);\n        }}\n        input={<Input id=\"select-multiple-checkbox\" />}\n        renderValue={selecteds => selecteds.map(selected => columnDef.lookup[selected]).join(', ')}\n        MenuProps={MenuProps}\n        style={{marginTop: 0}}\n      >\n        {\n          Object.keys(columnDef.lookup).map(key => (\n            <MenuItem key={key} value={key}>\n              <Checkbox checked={columnDef.tableData.filterValue ? columnDef.tableData.filterValue.indexOf(key.toString()) > -1 : false} />\n              <ListItemText primary={columnDef.lookup[key]} />\n            </MenuItem>\n          ))\n        }\n      </Select>\n    </FormControl>\n  )\n\n  renderFilterComponent = (columnDef) => (\n    React.createElement(columnDef.filterComponent, { columnDef: columnDef, onFilterChanged: this.props.onFilterChanged })\n  )\n\n  renderBooleanFilter = (columnDef) => (\n    <Checkbox\n      indeterminate={columnDef.tableData.filterValue === undefined}\n      checked={columnDef.tableData.filterValue === 'checked'}\n      onChange={() => {\n        let val;\n        if (columnDef.tableData.filterValue === undefined) {\n          val = 'checked';\n        } else if (columnDef.tableData.filterValue === 'checked') {\n          val = 'unchecked';\n        }\n\n        this.props.onFilterChanged(columnDef.tableData.id, val);\n      }}\n    />\n  )\n\n  renderDefaultFilter = (columnDef) => {\n    const localization = this.getLocalizationData();\n    const FilterIcon = this.props.icons.Filter;\n    return (\n      <TextField\n        style={columnDef.type === 'numeric' ? { float: 'right' } : {}}\n        type={columnDef.type === 'numeric' ? 'number' : 'search'}\n        value={columnDef.tableData.filterValue || ''}\n        placeholder={this.getLocalizedFilterPlaceHolder(columnDef)}\n        onChange={(event) => {\n          this.props.onFilterChanged(columnDef.tableData.id, event.target.value);\n        }}\n        inputProps={{'aria-label': `filter data by ${columnDef.title}`}}\n        InputProps={this.props.hideFilterIcons || columnDef.hideFilterIcon ? undefined : {\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <Tooltip title={localization.filterTooltip}>\n                <FilterIcon/>\n              </Tooltip>\n            </InputAdornment>\n          )\n        }}\n      />\n    );\n  }\n\n  renderDateTypeFilter = (columnDef) => {\n    const onDateInputChange = date => this.props.onFilterChanged(columnDef.tableData.id, date);\n    const pickerProps = {\n      value: columnDef.tableData.filterValue || null,\n      onChange: onDateInputChange,\n      placeholder: this.getLocalizedFilterPlaceHolder(columnDef),\n      clearable: true\n    };\n\n    let dateInputElement = null;\n    if (columnDef.type === 'date') {\n      dateInputElement = (\n        <DatePicker {...pickerProps} />\n      );\n    } else if (columnDef.type === 'datetime') {\n      dateInputElement = (\n        <DateTimePicker {...pickerProps} />\n      );\n    } else if (columnDef.type === 'time') {\n      dateInputElement = (\n        <TimePicker {...pickerProps} />\n      );\n    }\n    return (\n      <MuiPickersUtilsProvider\n        utils={DateFnsUtils}\n        locale={this.props.localization.dateTimePickerLocalization}>\n        {dateInputElement}\n      </MuiPickersUtilsProvider>\n    );\n  }\n\n  getComponentForColumn(columnDef) {\n    if (columnDef.filtering === false) {\n      return null;\n    }\n\n    if (columnDef.field || columnDef.customFilterAndSearch) {\n      if (columnDef.filterComponent) {\n        return this.renderFilterComponent(columnDef);\n      } else if (columnDef.lookup) {\n        return this.renderLookupFilter(columnDef);\n      } else if (columnDef.type === 'boolean') {\n        return this.renderBooleanFilter(columnDef);\n      } else if (['date', 'datetime', 'time'].includes(columnDef.type)) {\n        return this.renderDateTypeFilter(columnDef);\n      } else {\n        return this.renderDefaultFilter(columnDef);\n      }\n    }\n  }\n\n\n\n  render() {\n    const columns = this.props.columns\n      .filter(columnDef => !(columnDef.tableData.groupOrder > -1))\n      .sort((a, b) => a.tableData.columnOrder - b.tableData.columnOrder)\n      .map(columnDef => (\n        <TableCell key={columnDef.tableData.id} style={{ ...this.props.filterCellStyle, ...columnDef.filterCellStyle }}>\n          {this.getComponentForColumn(columnDef)}\n        </TableCell>\n      ));\n\n    if (this.props.selection) {\n      columns.splice(0, 0, <TableCell padding=\"none\" key=\"key-selection-column\" />);\n    }\n\n    if (this.props.hasActions) {\n      if (this.props.actionsColumnIndex === -1) {\n        columns.push(<TableCell key=\"key-action-column\" />);\n      } else {\n        let endPos = 0;\n        if (this.props.selection) {\n          endPos = 1;\n        }\n        columns.splice(this.props.actionsColumnIndex + endPos, 0, <TableCell key=\"key-action-column\" />);\n      }\n    }\n\n    if (this.props.hasDetailPanel) {\n      columns.splice(0, 0, <TableCell padding=\"none\" key=\"key-detail-panel-column\" />);\n    }\n\n    if (this.props.isTreeData > 0) {\n      columns.splice(0, 0,\n        <TableCell\n          padding=\"none\"\n          key={\"key-tree-data-filter\"}\n        />\n      );\n    }\n\n    ///////////Здесь был Атай///////////\n\n    columns.splice(-1, 1, \n    <TableCell key={\"filters-reset-button\"}>\n      <button \n          onClick={this.props.resetFilters}\n          style={{\n            width: \"30\",\n            color: \"#515151\",\n            fontFamily: \"Open Sans', sans-serif\",\n            fontSize: \"14px\",\n            textDecoration: \"underline\",\n            backgroundColor: 'Transparent',\n            backgroundRepeat:'no-repeat',\n            border: 'none',\n            cursor:'pointer',\n            overflow: 'hidden',\n            outline:'none',\n          }} >Reset all filters\n    </button>\n    </TableCell>\n    );\n    \n    ///////////Атай был здесь///////////\n    \n\n\n    this.props.columns\n      .filter(columnDef => columnDef.tableData.groupOrder > -1)\n      .forEach(columnDef => {\n        columns.splice(0, 0, <TableCell padding=\"checkbox\" key={\"key-group-filter\" + columnDef.tableData.id} />);\n      });\n\n    return (\n      <TableRow style={{ height: 10 }}>\n        {columns}\n      </TableRow>\n      \n    );\n  }\n}\n\nMTableFilterRow.defaultProps = {\n  columns: [],\n  selection: false,\n  hasActions: false,\n  localization: {\n    filterTooltip: 'Filter'\n  },\n  hideFilterIcons: false,\n};\n\nMTableFilterRow.propTypes = {\n  columns: PropTypes.array.isRequired,\n  hasDetailPanel: PropTypes.bool.isRequired,\n  isTreeData: PropTypes.bool.isRequired,\n  onFilterChanged: PropTypes.func.isRequired,\n  filterCellStyle: PropTypes.object,\n  selection: PropTypes.bool.isRequired,\n  actionsColumnIndex: PropTypes.number,\n  hasActions: PropTypes.bool,\n  localization: PropTypes.object,\n  hideFilterIcons: PropTypes.bool,\n};\n\nexport default MTableFilterRow;\n","/* eslint-disable no-unused-vars */\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/* eslint-enable no-unused-vars */\n\nclass MTableBody extends React.Component {\n  renderEmpty(emptyRowCount, renderData) {\n    const rowHeight = this.props.options.padding === 'default' ? 49 : 36;\n    const localization = { ...MTableBody.defaultProps.localization, ...this.props.localization };\n    if (this.props.options.showEmptyDataSourceMessage && renderData.length === 0) {\n      let addColumn = 0;\n      if (this.props.options.selection) {\n        addColumn++;\n      }\n      if (this.props.actions && this.props.actions.filter(a => a.position === \"row\" || typeof a === \"function\").length > 0) {\n        addColumn++;\n      }\n      if (this.props.hasDetailPanel) {\n        addColumn++;\n      }\n      if (this.props.isTreeData) {\n        addColumn++;\n      }\n      return (\n        <TableRow style={{ height: rowHeight * (this.props.options.paging && this.props.options.emptyRowsWhenPaging ? this.props.pageSize : 1) }} key={'empty-' + 0} >\n          <TableCell style={{ paddingTop: 0, paddingBottom: 0, textAlign: 'center' }} colSpan={this.props.columns.length + addColumn} key=\"empty-\">\n            {localization.emptyDataSourceMessage}\n          </TableCell>\n        </TableRow>\n      );\n    } else if (this.props.options.emptyRowsWhenPaging) {\n      return (\n        <React.Fragment>\n          {[...Array(emptyRowCount)].map((r, index) => <TableRow style={{ height: rowHeight }} key={'empty-' + index} />)}\n          {emptyRowCount > 0 && <TableRow style={{ height: 1 }} key={'empty-last1'} />}\n        </React.Fragment>\n      );\n    }\n  }\n\n  renderUngroupedRows(renderData) {\n    return renderData.map((data, index) => {\n      if (data.tableData.editing) {\n        return (\n          <this.props.components.EditRow\n            columns={this.props.columns.filter(columnDef => { return !columnDef.hidden })}\n            components={this.props.components}\n            data={data}\n            icons={this.props.icons}\n            localization={{ ...MTableBody.defaultProps.localization.editRow, ...this.props.localization.editRow, dateTimePickerLocalization: this.props.localization.dateTimePickerLocalization }}\n            key={index}\n            mode={data.tableData.editing}\n            options={this.props.options}\n            isTreeData={this.props.isTreeData}\n            detailPanel={this.props.detailPanel}\n            onEditingCanceled={this.props.onEditingCanceled}\n            onEditingApproved={this.props.onEditingApproved}\n            getFieldValue={this.props.getFieldValue}\n          />\n        );\n      }\n      else {\n        return (\n          <this.props.components.Row\n            components={this.props.components}\n            icons={this.props.icons}\n            data={data}\n            index={index}\n            key={\"row-\" + data.tableData.id}\n            level={0}\n            options={this.props.options}\n            localization={{ ...MTableBody.defaultProps.localization.editRow, ...this.props.localization.editRow }}\n            onRowSelected={this.props.onRowSelected}\n            actions={this.props.actions}\n            columns={this.props.columns}\n            getFieldValue={this.props.getFieldValue}\n            detailPanel={this.props.detailPanel}\n            path={[index + this.props.pageSize * this.props.currentPage]}\n            onToggleDetailPanel={this.props.onToggleDetailPanel}\n            onRowClick={this.props.onRowClick}\n            isTreeData={this.props.isTreeData}\n            onTreeExpandChanged={this.props.onTreeExpandChanged}\n            onEditingCanceled={this.props.onEditingCanceled}\n            onEditingApproved={this.props.onEditingApproved}\n            hasAnyEditingRow={this.props.hasAnyEditingRow}\n            treeDataMaxLevel={this.props.treeDataMaxLevel}\n          />\n        );\n      }\n    });\n  }\n\n  renderGroupedRows(groups, renderData) {\n    return renderData.map((groupData, index) => (\n      <this.props.components.GroupRow\n        actions={this.props.actions}\n        key={groupData.value == null ? ('' + index) : groupData.value}\n        columns={this.props.columns}\n        components={this.props.components}\n        detailPanel={this.props.detailPanel}\n        getFieldValue={this.props.getFieldValue}\n        groupData={groupData}\n        groups={groups}\n        icons={this.props.icons}\n        level={0}\n        path={[index + this.props.pageSize * this.props.currentPage]}\n        onGroupExpandChanged={this.props.onGroupExpandChanged}\n        onRowSelected={this.props.onRowSelected}\n        onRowClick={this.props.onRowClick}\n        onEditingCanceled={this.props.onEditingCanceled}\n        onEditingApproved={this.props.onEditingApproved}\n        onToggleDetailPanel={this.props.onToggleDetailPanel}\n        onTreeExpandChanged={this.props.onTreeExpandChanged}\n        options={this.props.options}\n        isTreeData={this.props.isTreeData}\n        hasAnyEditingRow={this.props.hasAnyEditingRow}\n        localization={{ ...MTableBody.defaultProps.localization.editRow, ...this.props.localization.editRow }}\n      />\n    ));\n  }\n\n\n  render() {\n    let renderData = this.props.renderData;\n    const groups = this.props.columns\n      .filter(col => col.tableData.groupOrder > -1)\n      .sort((col1, col2) => col1.tableData.groupOrder - col2.tableData.groupOrder);\n\n    let emptyRowCount = 0;\n    if (this.props.options.paging) {\n      emptyRowCount = this.props.pageSize - renderData.length;\n    }\n\n    return (\n      <TableBody>\n        {this.props.options.filtering &&\n          <this.props.components.FilterRow\n            columns={this.props.columns}\n            // columns={this.props.columns.filter(columnDef => !columnDef.hidden)} // это оригинал\n            icons={this.props.icons}\n            hasActions={this.props.actions.filter(a => a.position === \"row\" || typeof a === \"function\").length > 0}\n            actionsColumnIndex={this.props.options.actionsColumnIndex}\n            onFilterChanged={this.props.onFilterChanged}\n            selection={this.props.options.selection}\n            localization={{ ...MTableBody.defaultProps.localization.filterRow, ...this.props.localization.filterRow, dateTimePickerLocalization: this.props.localization.dateTimePickerLocalization }}\n            hasDetailPanel={!!this.props.detailPanel}\n            isTreeData={this.props.isTreeData}\n            filterCellStyle={this.props.options.filterCellStyle}\n            hideFilterIcons={this.props.options.hideFilterIcons}\n            resetFilters={this.props.resetFilters} // И тут был Атай\n          />\n        }\n\n        {this.props.showAddRow && this.props.options.addRowPosition === \"first\" &&\n          <this.props.components.EditRow\n            columns={this.props.columns.filter(columnDef => { return !columnDef.hidden })}\n            data={this.props.initialFormData}\n            components={this.props.components}\n            icons={this.props.icons}\n            key=\"key-add-row\"\n            mode=\"add\"\n            localization={{ ...MTableBody.defaultProps.localization.editRow, ...this.props.localization.editRow }}\n            options={this.props.options}\n            isTreeData={this.props.isTreeData}\n            detailPanel={this.props.detailPanel}\n            onEditingCanceled={this.props.onEditingCanceled}\n            onEditingApproved={this.props.onEditingApproved}\n            getFieldValue={this.props.getFieldValue}\n          />\n        }\n\n        {groups.length > 0 ?\n          this.renderGroupedRows(groups, renderData) :\n          this.renderUngroupedRows(renderData)\n        }\n\n        {this.props.showAddRow && this.props.options.addRowPosition === \"last\" &&\n          <this.props.components.EditRow\n            columns={this.props.columns.filter(columnDef => { return !columnDef.hidden })}\n            data={this.props.initialFormData}\n            components={this.props.components}\n            icons={this.props.icons}\n            key=\"key-add-row\"\n            mode=\"add\"\n            localization={{ ...MTableBody.defaultProps.localization.editRow, ...this.props.localization.editRow }}\n            options={this.props.options}\n            isTreeData={this.props.isTreeData}\n            detailPanel={this.props.detailPanel}\n            onEditingCanceled={this.props.onEditingCanceled}\n            onEditingApproved={this.props.onEditingApproved}\n            getFieldValue={this.props.getFieldValue}\n          />\n        }\n        {this.renderEmpty(emptyRowCount, renderData)}\n      </TableBody>\n    );\n  }\n}\n\nMTableBody.defaultProps = {\n  actions: [],\n  currentPage: 0,\n  pageSize: 5,\n  renderData: [],\n  selection: false,\n  localization: {\n    emptyDataSourceMessage: 'No records to display',\n    filterRow: {},\n    editRow: {}\n  }\n};\n\nMTableBody.propTypes = {\n  actions: PropTypes.array,\n  components: PropTypes.object.isRequired,\n  columns: PropTypes.array.isRequired,\n  currentPage: PropTypes.number,\n  detailPanel: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))]),\n  getFieldValue: PropTypes.func.isRequired,\n  hasAnyEditingRow: PropTypes.bool,\n  hasDetailPanel: PropTypes.bool.isRequired,\n  icons: PropTypes.object.isRequired,\n  isTreeData: PropTypes.bool.isRequired,\n  onRowSelected: PropTypes.func,\n  options: PropTypes.object.isRequired,\n  pageSize: PropTypes.number,\n  renderData: PropTypes.array,\n  initialFormData: PropTypes.object,\n  selection: PropTypes.bool.isRequired,\n  showAddRow: PropTypes.bool,\n  treeDataMaxLevel: PropTypes.number,\n  localization: PropTypes.object,\n  onFilterChanged: PropTypes.func,\n  onGroupExpandChanged: PropTypes.func,\n  onToggleDetailPanel: PropTypes.func.isRequired,\n  onTreeExpandChanged: PropTypes.func.isRequired,\n  onRowClick: PropTypes.func,\n  onEditingCanceled: PropTypes.func,\n  onEditingApproved: PropTypes.func,\n};\n\nexport default MTableBody;\n","import React, { Component } from 'react';\nimport MaterialTable from 'material-table';\nimport config from '../config';\nimport FilterRow from './m-table-filter-row'\nimport MTBody from './m-table-body'\n\n\nconst objColumns = Object.values(config.columns)\n\n\nclass TransferTableComponent extends Component {\n\tstate = {\n\t\tcolumns: [],\n\t\tdata: []\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setData()\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.filterCountry !== this.props.filterCountry) {\n\t\t\tif (this.props.filterCountry !== '') {\n\t\t\t\tthis.filterCountry(this.props.filterCountry)\n\t\t\t}\n\t\t}\n\t}\n\n\tsetData = () => {\n\t\tthis.setState({ data: this.props.data })\n\t\tlet newData = this.getLookupData(this.props.data)\n\t\tthis.initLookup(newData)\n\t\tthis.loadImage()\n\t}\n\n\tloadImage = () => {\n\t\tobjColumns.map(obj => {\n\t\t\tif (obj.type === 'image' && obj.lookup !== '') {\n\t\t\t\tlet keys = Object.keys(obj.lookup)\n\t\t\t\tkeys.map(key => {\n\t\t\t\t\tobj.lookup[key] = <img src={obj.lookup[key]} alt={key} />\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\tthis.setState({columns: objColumns})\n\t}\n\n\t\n\tgetLookupData =(data)=> {\n\tlet cols = Object.keys(data[0])\n\tlet newData = cols.reduce((a,b)=> (a[b]={},a),{});\n\tthis.props.data.map(row =>\n\t\t{\n\t\t\tcols.map(col => {\n\t\t\t\tlet val = row[col]\n\t\t\t\tnewData[col][val] = val\n\t\t\t})\n\t\t})\t\n\t\treturn [newData, cols]\n\t}\n\n\tinitLookup =(data)=> {\n\t\tlet newData = data[0]\n\t\tlet keys = data[1]\n\n\t\tkeys.map(key => {\n\t\t\tobjColumns.forEach(col => {\n\t\t\t\tif (col.field === key && col.lookup === '' && (col.type === '' || col.type === 'numeric')) {\n\t\t\t\t\tcol.lookup = newData[key]\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t}\n\t\n\tfilterCountry = (country) => {\n\t\tobjColumns.forEach(col => {\n\t\t\tif (col.field === \"country\") {\n\t\t\t\tcol.tableData.filterValue = [country]\n\t\t\t}\n\t\t})\n\t\tthis.setState({columns: objColumns})\n\t}\n\n\tresetFilters = () => {\n\t\tobjColumns.forEach(col => {\n\t\t\tcol.tableData.filterValue = \"\"\n\t\t})\n\t\tthis.setState({columns: objColumns})\n\t\tthis.props.resetMap()\n\t}\n\n\t\n\n\n\trender() {\n\t\treturn (\n\t\t\t<MaterialTable\n\t\t\t\tcolumns={this.state.columns}\n\t\t\t\tdata={this.state.data}\n\t\t\t\tcomponents={{\n\t\t\t\tFilterRow: props => {\n\t\t\t\t\treturn\t<FilterRow {...props}/>},\n\t\t\t\t\tBody: props => <MTBody {...props} resetFilters={this.resetFilters}/>\n\t\t\t\t}}\n\n\t\t\t\tlocalization={{\n\t\t\t\t\ttoolbar: { searchPlaceholder: \"Search the data…\" },\n\t\t\t\t}}\n\n\t\t\t\toptions={{\n\t\t\t\t\t...config.table,\n\t\t\t\t\trowStyle: (data, index) => {\n\t\t\t\t\t\tif (index % 2 === 0 && !config.table.rowStyle.backgroundColor) {\n\t\t\t\t\t\t\treturn { ...config.table.rowStyle, backgroundColor: \"#e5e5e5\" }\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {return {...config.table.rowStyle}}\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t)\n\t}\n}\n\nexport default TransferTableComponent;","import React, { Component } from 'react';\n\nimport TransferMapComponent from \"./TransferMapComponent/TransferMapComponent\";\nimport TransferTableComponent from \"./TransferTableComponent/TransferTableComponent\";\nimport config from \"./config\";\nimport {csv} from \"d3\";\n\n\nclass App extends Component {\n  state = {\n    ready: false,\n    data: {},\n    filterCountry: '',\n    resetMap: false\n  }\n\n  componentDidMount() {\n    csv(config.csvUrl)\n      .then(d => this.setState({data: d, ready: true}))\n  }\n  \n  handleCountryClick = (country) => {\n    this.setState({filterCountry: country,\n                   resetMap: false})\n  }\n  handleResetMap = () => {\n    this.setState({resetMap: true})\n  }\n\n  render() {\n    let all = null;\n    if (this.state.ready) {\n      all = (\n        <div>\n          <TransferMapComponent \n            data={this.state.data}\n            handleCountryClick={this.handleCountryClick}\n            resetMap={this.state.resetMap} />\n          <TransferTableComponent \n            data={this.state.data}\n            filterCountry={this.state.filterCountry}\n            resetMap={this.handleResetMap} />\n        </div>\n      );\n    }\n    return (\n      <div className=\"App\">\n        {all}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}